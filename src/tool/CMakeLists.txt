set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

find_package(Qt5Core CONFIG REQUIRED)
find_package(Qt5Widgets CONFIG REQUIRED)
find_package(Qt5Gui CONFIG REQUIRED)
find_package(Qt5OpenGL CONFIG REQUIRED)
set(CMAKE_CXX_COMPILER g++)
set(CMAKE_C_COMPILER gcc)
set(DEFINES "-DUNICODE -D_UNICODE -DWIN32 -DQT_DEPRECATED_WARNINGS")
set(CMAKE_C_FLAGS "-fno-keep-inline-dllexport -fopenmp -march=i686 -mtune=core2 -Wa,-mbig-obj -O2 -Wall -W -Wextra ${DEFINES}")
set(CMAKE_CXX_FLAGS "-fno-keep-inline-dllexport -fopenmp -O2 -g -Wall -W -Wextra -fexceptions -mthreads ${DEFINES}")

if (CMAKE_BUILD_TYPE MATCHES Release)
    message("release compile!!")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Wl,-s -Wl,-subsystem,windows -mthreads")
    add_definitions(-DQT_NO_DEBUG)
endif (CMAKE_BUILD_TYPE MATCHES Release)

if (CMAKE_BUILD_TYPE MATCHES Debug)
    message("debug compile!!")
    set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-mthreads")
endif (CMAKE_BUILD_TYPE MATCHES Debug)

aux_source_directory(${PROJECT_SOURCE_DIR}/src/core CORE)
aux_source_directory(${PROJECT_SOURCE_DIR}/src/gui GUI)
include_directories(${PROJECT_SOURCE_DIR}/src/core)
include_directories(${PROJECT_SOURCE_DIR}/src/gui)

set(SRC ${PROJECT_SOURCE_DIR}/res/ui.qrc)
set(LIBLOG ${PROJECT_SOURCE_DIR}/src/core/Log.cpp)
set(LIBCAN ${PROJECT_SOURCE_DIR}/lib/ControlCAN.LIB)
set(LIBGSL D:/msys32/mingw32/lib/libgsl.a)
set(LIBOMP D:/msys32/mingw32/lib/gcc/i686-w64-mingw32/7.3.0/libgomp.a)

add_executable(SendMain SendMain.cpp SendDialog.cpp)
target_link_libraries(SendMain Qt5Widgets Qt5Core Qt5Gui)